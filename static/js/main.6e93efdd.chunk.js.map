{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","searchByName","name","tempUsers","state","username","filter","user","toLowerCase","includes","setState","filteredUsers","componentDidMount","fetch","then","response","json","data","console","log","catch","err","className","type","onChange","event","target","value","placeholder","this","map","index","email","website","address","city","company","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA6DeA,E,kDAzDb,aAAe,IAAD,8BACZ,gBAOFC,aAAe,SAACC,GACd,IAAIC,EAAY,EAAKC,MAAMC,SAASC,QAAO,SAACC,GAC1C,OAAOA,EAAKL,KAAKM,cAAcC,SAASP,EAAKM,kBAE/C,EAAKE,SAAS,CAAEC,cAAeR,KAZnB,EAedS,kBAAoB,WAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKP,SAAS,CAAEL,SAAUY,IAC1B,EAAKP,SAAS,CAAEC,cAAeM,IAC/BC,QAAQC,IAAI,EAAKf,MAAMO,kBAExBS,OAAM,SAACC,GACNH,QAAQC,IAAIE,OArBhB,EAAKjB,MAAQ,CACXC,SAAU,GACVM,cAAe,IALL,E,0CA2Bd,WAAU,IAAD,OACP,OACE,sBAAKW,UAAU,YAAf,UACE,kDACA,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLC,SAAU,SAACC,GAAW,EAAKxB,aAAawB,EAAMC,OAAOC,QAErDL,UAAU,eACVM,YAAY,6BAGfC,KAAKzB,MAAMO,cAAcmB,KAAI,SAACvB,EAAMwB,GACnC,OACE,sBAAKT,UAAU,OAAf,UACE,6BAAKf,EAAKL,OACV,4BAAIK,EAAKyB,QACT,4BAAIzB,EAAK0B,UACT,4BAAI1B,EAAKF,WACT,4BAAIE,EAAK2B,QAAQC,OACjB,4BAAI5B,EAAK6B,QAAQlC,oB,GAjDbmC,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e93efdd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: [],\n      filteredUsers: []\n    };\n  }\n  searchByName = (name) => {\n    let tempUsers = this.state.username.filter((user) => {\n      return user.name.toLowerCase().includes(name.toLowerCase());\n    });\n    this.setState({ filteredUsers: tempUsers });\n  };\n\n  componentDidMount = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ username: data });\n        this.setState({ filteredUsers: data });\n        console.log(this.state.filteredUsers);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>User Information</h1>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            onChange={(event) => {this.searchByName(event.target.value);\n            }}\n            className=\"form-control\"\n            placeholder=\"Enter the Name here...\"\n          />\n        </div>\n        {this.state.filteredUsers.map((user, index) => {\n          return (\n            <div className=\"card\">\n              <h3>{user.name}</h3>\n              <p>{user.email}</p>\n              <p>{user.website}</p>\n              <p>{user.username}</p>\n              <p>{user.address.city}</p>\n              <p>{user.company.name}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}